# -*- coding: utf-8 -*-
"""Milestone 02.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eGJCE58GPLtzQjutyOzIcVGlz1yTN0-J

# Sampling Assignment
Implementing Probability Sampling Methods in Python

## Instructions
Upload your dataset (minimum 200 rows), then complete all parts A–F.
"""

import pandas as pd
import numpy as np

# Load your dataset
df = pd.read_csv('crop_yield.csv.zip')
df.head()

"""## Part A — Setup
- Report dataset size (rows, columns)
"""

print("6:", df.shape)

"""## Part B — Simple Random Sampling"""

sample_size = 50
srs = df.sample(n=sample_size, random_state=42)
print(srs.head())
print("Population mean:", df['Yield_tons_per_hectare'].mean())
print("Sample mean:", srs['Yield_tons_per_hectare'].mean())

"""## Part C — Systematic Sampling"""

n = 50
k = len(df) // n
start = np.random.randint(0, k)
sys_sample = df.iloc[start::k][:n]
sys_sample.head()

"""## Part D — Stratified Sampling"""

strata_col = "Region" # your column
sample_size = 50

# proportional fraction for each group
frac = sample_size / len(df)

# stratified sample
stratified_sample = df.groupby(strata_col, group_keys=False).sample(frac=frac, random_state=42)

stratified_sample.head()

df['cluster_id'] = df.index // (len(df)//10)  # 10 clusters
selected_clusters = np.random.choice(df['cluster_id'].unique(), size=2, replace=False)
cluster_sample = df[df['cluster_id'].isin(selected_clusters)]
print("Selected clusters:", selected_clusters)
cluster_sample.head()

"""## Part F — Comparison & Reflection
Compare sample means vs population mean, then write your reflection.

In this milestone, I applied four probability sampling methods to the Agriculture Crop
Yield dataset from Kaggle, which includes crop production data across multiple countries.
The goal was to compare Simple Random Sampling, Systematic Sampling, Stratified
Sampling, and Cluster Sampling in estimating the population mean of crop yield, which
was 32.337344 t/ha.
Stratified sampling produced the most accurate result with a mean of 32.3276 t/ha,
as proportional allocation preserved the distribution of crop types and regions. Simple
Random Sampling yielded 32.25 t/ha, slightly lower, while systematic sampling gave
32.3872 t/ha, slightly higher. Cluster sampling showed the largest deviation at 32.5075
t/ha due to potential homogeneity within clusters.
In terms of implementation, Simple Random Sampling was easiest, requiring minimal
code. Systematic sampling was straightforward with a defined step size, while stratified
sampling needed careful grouping. Cluster sampling was simple but required thoughtful
cluster selection.

Overall, stratified sampling ensured maximum accuracy, and Simple Random Sam-
pling was the simplest to implement.
"""